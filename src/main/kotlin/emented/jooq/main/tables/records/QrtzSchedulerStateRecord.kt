/*
 * This file is generated by jOOQ.
 */
package emented.jooq.main.tables.records

import emented.jooq.main.tables.QrtzSchedulerState

import org.jooq.Record2
import org.jooq.impl.UpdatableRecordImpl

/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class QrtzSchedulerStateRecord() :
    UpdatableRecordImpl<QrtzSchedulerStateRecord>(QrtzSchedulerState.QRTZ_SCHEDULER_STATE) {

    open var schedName: String?
        set(value): Unit = set(0, value)
        get(): String? = get(0) as String?

    open var instanceName: String?
        set(value): Unit = set(1, value)
        get(): String? = get(1) as String?

    open var lastCheckinTime: Long?
        set(value): Unit = set(2, value)
        get(): Long? = get(2) as Long?

    open var checkinInterval: Long?
        set(value): Unit = set(3, value)
        get(): Long? = get(3) as Long?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record2<String?, String?> = super.key() as Record2<String?, String?>

    /**
     * Create a detached, initialised QrtzSchedulerStateRecord
     */
    constructor(
        schedName: String? = null,
        instanceName: String? = null,
        lastCheckinTime: Long? = null,
        checkinInterval: Long? = null
    ) : this() {
        this.schedName = schedName
        this.instanceName = instanceName
        this.lastCheckinTime = lastCheckinTime
        this.checkinInterval = checkinInterval
        resetChangedOnNotNull()
    }
}
