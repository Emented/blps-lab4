/*
 * This file is generated by jOOQ.
 */
package emented.jooq.main.tables.records

import emented.jooq.main.tables.Comment
import org.jooq.Record1
import org.jooq.impl.UpdatableRecordImpl
import java.time.OffsetDateTime

/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class CommentRecord() : UpdatableRecordImpl<CommentRecord>(Comment.COMMENT) {

    open var id: Long?
        set(value): Unit = set(0, value)
        get(): Long? = get(0) as Long?

    open var textValue: String?
        set(value): Unit = set(1, value)
        get(): String? = get(1) as String?

    open var createdAt: OffsetDateTime?
        set(value): Unit = set(2, value)
        get(): OffsetDateTime? = get(2) as OffsetDateTime?

    open var updatedAt: OffsetDateTime?
        set(value): Unit = set(3, value)
        get(): OffsetDateTime? = get(3) as OffsetDateTime?

    open var communityId: Long?
        set(value): Unit = set(4, value)
        get(): Long? = get(4) as Long?

    open var userId: Long?
        set(value): Unit = set(5, value)
        get(): Long? = get(5) as Long?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<Long?> = super.key() as Record1<Long?>

    /**
     * Create a detached, initialised CommentRecord
     */
    constructor(
        id: Long? = null,
        textValue: String? = null,
        createdAt: OffsetDateTime? = null,
        updatedAt: OffsetDateTime? = null,
        communityId: Long? = null,
        userId: Long? = null
    ) : this() {
        this.id = id
        this.textValue = textValue
        this.createdAt = createdAt
        this.updatedAt = updatedAt
        this.communityId = communityId
        this.userId = userId
        resetChangedOnNotNull()
    }
}
