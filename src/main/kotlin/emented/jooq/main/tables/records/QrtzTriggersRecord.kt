/*
 * This file is generated by jOOQ.
 */
package emented.jooq.main.tables.records

import emented.jooq.main.tables.QrtzTriggers

import org.jooq.Record3
import org.jooq.impl.UpdatableRecordImpl

/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class QrtzTriggersRecord() : UpdatableRecordImpl<QrtzTriggersRecord>(QrtzTriggers.QRTZ_TRIGGERS) {

    open var schedName: String?
        set(value): Unit = set(0, value)
        get(): String? = get(0) as String?

    open var triggerName: String?
        set(value): Unit = set(1, value)
        get(): String? = get(1) as String?

    open var triggerGroup: String?
        set(value): Unit = set(2, value)
        get(): String? = get(2) as String?

    open var jobName: String?
        set(value): Unit = set(3, value)
        get(): String? = get(3) as String?

    open var jobGroup: String?
        set(value): Unit = set(4, value)
        get(): String? = get(4) as String?

    open var description: String?
        set(value): Unit = set(5, value)
        get(): String? = get(5) as String?

    open var nextFireTime: Long?
        set(value): Unit = set(6, value)
        get(): Long? = get(6) as Long?

    open var prevFireTime: Long?
        set(value): Unit = set(7, value)
        get(): Long? = get(7) as Long?

    open var priority: Int?
        set(value): Unit = set(8, value)
        get(): Int? = get(8) as Int?

    open var triggerState: String?
        set(value): Unit = set(9, value)
        get(): String? = get(9) as String?

    open var triggerType: String?
        set(value): Unit = set(10, value)
        get(): String? = get(10) as String?

    open var startTime: Long?
        set(value): Unit = set(11, value)
        get(): Long? = get(11) as Long?

    open var endTime: Long?
        set(value): Unit = set(12, value)
        get(): Long? = get(12) as Long?

    open var calendarName: String?
        set(value): Unit = set(13, value)
        get(): String? = get(13) as String?

    open var misfireInstr: Short?
        set(value): Unit = set(14, value)
        get(): Short? = get(14) as Short?

    open var jobData: ByteArray?
        set(value): Unit = set(15, value)
        get(): ByteArray? = get(15) as ByteArray?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record3<String?, String?, String?> = super.key() as Record3<String?, String?, String?>

    /**
     * Create a detached, initialised QrtzTriggersRecord
     */
    constructor(
        schedName: String? = null,
        triggerName: String? = null,
        triggerGroup: String? = null,
        jobName: String? = null,
        jobGroup: String? = null,
        description: String? = null,
        nextFireTime: Long? = null,
        prevFireTime: Long? = null,
        priority: Int? = null,
        triggerState: String? = null,
        triggerType: String? = null,
        startTime: Long? = null,
        endTime: Long? = null,
        calendarName: String? = null,
        misfireInstr: Short? = null,
        jobData: ByteArray? = null
    ) : this() {
        this.schedName = schedName
        this.triggerName = triggerName
        this.triggerGroup = triggerGroup
        this.jobName = jobName
        this.jobGroup = jobGroup
        this.description = description
        this.nextFireTime = nextFireTime
        this.prevFireTime = prevFireTime
        this.priority = priority
        this.triggerState = triggerState
        this.triggerType = triggerType
        this.startTime = startTime
        this.endTime = endTime
        this.calendarName = calendarName
        this.misfireInstr = misfireInstr
        this.jobData = jobData
        resetChangedOnNotNull()
    }
}
