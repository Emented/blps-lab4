/*
 * This file is generated by jOOQ.
 */
package emented.jooq.main.tables.records

import emented.jooq.main.tables.ActRuCaseExecution

import org.jooq.Record1
import org.jooq.impl.UpdatableRecordImpl

/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class ActRuCaseExecutionRecord() :
    UpdatableRecordImpl<ActRuCaseExecutionRecord>(ActRuCaseExecution.ACT_RU_CASE_EXECUTION) {

    open var id_: String?
        set(value): Unit = set(0, value)
        get(): String? = get(0) as String?

    open var rev_: Int?
        set(value): Unit = set(1, value)
        get(): Int? = get(1) as Int?

    open var caseInstId_: String?
        set(value): Unit = set(2, value)
        get(): String? = get(2) as String?

    open var superCaseExec_: String?
        set(value): Unit = set(3, value)
        get(): String? = get(3) as String?

    open var superExec_: String?
        set(value): Unit = set(4, value)
        get(): String? = get(4) as String?

    open var businessKey_: String?
        set(value): Unit = set(5, value)
        get(): String? = get(5) as String?

    open var parentId_: String?
        set(value): Unit = set(6, value)
        get(): String? = get(6) as String?

    open var caseDefId_: String?
        set(value): Unit = set(7, value)
        get(): String? = get(7) as String?

    open var actId_: String?
        set(value): Unit = set(8, value)
        get(): String? = get(8) as String?

    open var prevState_: Int?
        set(value): Unit = set(9, value)
        get(): Int? = get(9) as Int?

    open var currentState_: Int?
        set(value): Unit = set(10, value)
        get(): Int? = get(10) as Int?

    open var required_: Boolean?
        set(value): Unit = set(11, value)
        get(): Boolean? = get(11) as Boolean?

    open var tenantId_: String?
        set(value): Unit = set(12, value)
        get(): String? = get(12) as String?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<String?> = super.key() as Record1<String?>

    /**
     * Create a detached, initialised ActRuCaseExecutionRecord
     */
    constructor(
        id_: String? = null,
        rev_: Int? = null,
        caseInstId_: String? = null,
        superCaseExec_: String? = null,
        superExec_: String? = null,
        businessKey_: String? = null,
        parentId_: String? = null,
        caseDefId_: String? = null,
        actId_: String? = null,
        prevState_: Int? = null,
        currentState_: Int? = null,
        required_: Boolean? = null,
        tenantId_: String? = null
    ) : this() {
        this.id_ = id_
        this.rev_ = rev_
        this.caseInstId_ = caseInstId_
        this.superCaseExec_ = superCaseExec_
        this.superExec_ = superExec_
        this.businessKey_ = businessKey_
        this.parentId_ = parentId_
        this.caseDefId_ = caseDefId_
        this.actId_ = actId_
        this.prevState_ = prevState_
        this.currentState_ = currentState_
        this.required_ = required_
        this.tenantId_ = tenantId_
        resetChangedOnNotNull()
    }
}
